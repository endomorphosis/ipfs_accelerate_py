[pytest]
testpaths = test
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery
norecursedirs = .* venv env archive dist build
addopts = 
    --verbose
    --color=yes
    --durations=10

# Test categories and markers
markers =
    webgpu: mark test as requiring WebGPU
    webnn: mark test as requiring WebNN
    cuda: mark test as requiring CUDA
    rocm: mark test as requiring ROCm
    mps: mark test as requiring Apple Metal Performance Shaders
    cpu: mark test as requiring only CPU
    slow: mark test as slow (>30s)
    model: mark test as a model test
    hardware: mark test as a hardware test
    api: mark test as an API test
    integration: mark test as an integration test
    distributed: mark test as a distributed test
    browser: mark test as requiring a browser
    benchmark: mark test as a performance benchmark
    text: mark test as using text models
    vision: mark test as using vision models
    audio: mark test as using audio models
    multimodal: mark test as using multimodal models
    flaky: mark test as occasionally failing due to external factors

# Test timeouts
timeout = 300
timeout_method = thread

# xfail behavior
xfail_strict = True

# Console output
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test reporting
junit_family = xunit2

# Test environments
env =
    PYTHONPATH=.
    TEST_MODE=development