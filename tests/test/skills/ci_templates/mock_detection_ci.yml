name: HuggingFace Model Test with Mock Detection

on:
  push:
    branches: [ main ]
    paths:
      - 'test/**'
      - 'fixed_tests/**'
      - 'templates/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'test/**'
      - 'fixed_tests/**'
      - 'templates/**'
  workflow_dispatch:
    inputs:
      model_type:
        description: 'Specific model type to test (e.g., bert, gpt2, t5, vit)'
        required: false
        default: ''
      test_mode:
        description: 'Test mode: all, mock, real'
        required: false
        default: 'mock'

jobs:
  verify-mock-detection:
    name: Verify Mock Detection System
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-xdist
          # Install minimal dependencies for testing
          pip install numpy
          # Don't install actual model dependencies for this verification
      
      - name: Verify template mock detection
        run: |
          cd test/skills
          python check_template_mock_status.py --detailed
        
      - name: Verify test files mock detection
        run: |
          cd test/skills
          python verify_all_mock_detection.py --check-only

  test-with-mocks:
    name: Test with Mock Objects
    runs-on: ubuntu-latest
    needs: verify-mock-detection
    
    env:
      MOCK_TORCH: 'True'
      MOCK_TRANSFORMERS: 'True'
      MOCK_TOKENIZERS: 'True'
      MOCK_SENTENCEPIECE: 'True'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-xdist
          # Install minimal dependencies for testing
          pip install numpy unittest-mock
      
      - name: Run tests with mock objects
        run: |
          cd test/skills/fixed_tests
          if [[ "${{ github.event.inputs.model_type }}" != "" ]]; then
            # Run specific model type test
            echo "Running test for ${{ github.event.inputs.model_type }} with mock objects"
            python test_hf_${{ github.event.inputs.model_type }}.py
          else
            # Run all core model tests
            echo "Running all core model tests with mock objects"
            for model in bert gpt2 t5 vit roberta; do
              if [ -f "test_hf_${model}.py" ]; then
                echo "Testing ${model}..."
                python test_hf_${model}.py
              fi
            done
          fi
      
      - name: Validate mock detection
        run: |
          cd test/skills
          # Verify that tests correctly report using mock objects
          if [[ "${{ github.event.inputs.model_type }}" != "" ]]; then
            python verify_mock_detection.py --file fixed_tests/test_hf_${{ github.event.inputs.model_type }}.py
          else
            for model in bert gpt2 t5 vit roberta; do
              if [ -f "fixed_tests/test_hf_${model}.py" ]; then
                echo "Verifying ${model}..."
                python verify_mock_detection.py --file fixed_tests/test_hf_${model}.py
              fi
            done
          fi

  test-with-real-deps:
    name: Test with Real Dependencies
    runs-on: ubuntu-latest
    needs: test-with-mocks
    if: github.event.inputs.test_mode == 'all' || github.event.inputs.test_mode == 'real'
    
    env:
      MOCK_TORCH: 'False'
      MOCK_TRANSFORMERS: 'False'
      MOCK_TOKENIZERS: 'False'
      MOCK_SENTENCEPIECE: 'False'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-xdist
          # Install actual model dependencies
          pip install torch==2.1.1 torchvision==0.16.1
          pip install transformers==4.37.0 tokenizers==0.15.0 sentencepiece==0.1.99
          pip install pillow numpy tqdm
      
      - name: Run tests with real dependencies
        run: |
          cd test/skills/fixed_tests
          if [[ "${{ github.event.inputs.model_type }}" != "" ]]; then
            # Run specific model type test
            echo "Running test for ${{ github.event.inputs.model_type }} with real dependencies"
            python test_hf_${{ github.event.inputs.model_type }}.py
          else
            # Run selected core model tests
            echo "Running selected core model tests with real dependencies"
            for model in bert gpt2; do
              if [ -f "test_hf_${model}.py" ]; then
                echo "Testing ${model}..."
                python test_hf_${model}.py
              fi
            done
          fi
      
      - name: Validate inference detection
        run: |
          cd test/skills
          # Verify that tests correctly report using real inference
          if [[ "${{ github.event.inputs.model_type }}" != "" ]]; then
            python verify_mock_detection.py --file fixed_tests/test_hf_${{ github.event.inputs.model_type }}.py
          else
            for model in bert gpt2; do
              if [ -f "fixed_tests/test_hf_${model}.py" ]; then
                echo "Verifying ${model}..."
                python verify_mock_detection.py --file fixed_tests/test_hf_${model}.py
              fi
            done
          fi

  mixed-dependency-test:
    name: Test with Mixed Dependencies
    runs-on: ubuntu-latest
    needs: verify-mock-detection
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-xdist
          # Install only torch but not transformers
          pip install torch==2.1.1
          pip install pillow numpy tqdm
      
      - name: Run tests with torch but without transformers
        env:
          MOCK_TORCH: 'False'
          MOCK_TRANSFORMERS: 'True'
          MOCK_TOKENIZERS: 'True'
          MOCK_SENTENCEPIECE: 'True'
        run: |
          cd test/skills/fixed_tests
          for model in bert gpt2; do
            if [ -f "test_hf_${model}.py" ]; then
              echo "Testing ${model} with torch but without transformers..."
              python test_hf_${model}.py
              echo "---"
            fi
          done
      
      - name: Run tests with transformers but without torch
        env:
          MOCK_TORCH: 'True'
          MOCK_TRANSFORMERS: 'False'
          MOCK_TOKENIZERS: 'False'
          MOCK_SENTENCEPIECE: 'False'
        run: |
          # Install transformers but remove torch
          pip uninstall -y torch torchvision
          pip install transformers==4.37.0 tokenizers==0.15.0 sentencepiece==0.1.99
          
          cd test/skills/fixed_tests
          for model in bert gpt2; do
            if [ -f "test_hf_${model}.py" ]; then
              echo "Testing ${model} with transformers but without torch..."
              python test_hf_${model}.py
              echo "---"
            fi
          done