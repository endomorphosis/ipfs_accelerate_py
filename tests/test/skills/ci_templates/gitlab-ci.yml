stages:
  - validation
  - mock-testing
  - real-testing
  - mixed-testing

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - .pip-cache/

# Template for Python setup
.setup_python:
  before_script:
    - python -m pip install --upgrade pip
    - pip install pytest pytest-xdist
    - pip install numpy
  
# Verify mock detection implementation
verify-mock-detection:
  stage: validation
  image: python:3.10
  extends: .setup_python
  script:
    - cd test/skills
    - python check_template_mock_status.py --detailed
    - python verify_all_mock_detection.py --check-only
  artifacts:
    paths:
      - test/skills/mock_detection_report_*.txt
    when: always
    expire_in: 1 week

# Test with all dependencies mocked
test-with-mocks:
  stage: mock-testing
  image: python:3.10
  extends: .setup_python
  variables:
    MOCK_TORCH: "True"
    MOCK_TRANSFORMERS: "True"
    MOCK_TOKENIZERS: "True"
    MOCK_SENTENCEPIECE: "True"
  script:
    - cd test/skills/fixed_tests
    # Run tests for core models with mock objects
    - |
      for model in bert gpt2 t5 vit roberta; do
        if [ -f "test_hf_${model}.py" ]; then
          echo "Testing ${model}..."
          python test_hf_${model}.py
        fi
      done
    # Verify mock detection
    - cd ..
    - |
      for model in bert gpt2 t5 vit roberta; do
        if [ -f "fixed_tests/test_hf_${model}.py" ]; then
          echo "Verifying ${model}..."
          python verify_mock_detection.py --file fixed_tests/test_hf_${model}.py
        fi
      done
  dependencies:
    - verify-mock-detection
  artifacts:
    paths:
      - test/skills/fixed_tests/collected_results/*.json
    when: always
    expire_in: 1 week

# Test with real dependencies
test-with-real-deps:
  stage: real-testing
  image: python:3.10
  extends: .setup_python
  variables:
    MOCK_TORCH: "False"
    MOCK_TRANSFORMERS: "False"
    MOCK_TOKENIZERS: "False"
    MOCK_SENTENCEPIECE: "False"
  script:
    # Install actual model dependencies
    - pip install torch==2.1.1 torchvision==0.16.1
    - pip install transformers==4.37.0 tokenizers==0.15.0 sentencepiece==0.1.99
    - pip install pillow tqdm
    - cd test/skills/fixed_tests
    # Run tests for selected core models with real dependencies
    - |
      for model in bert gpt2; do
        if [ -f "test_hf_${model}.py" ]; then
          echo "Testing ${model}..."
          python test_hf_${model}.py
        fi
      done
    # Verify real inference detection
    - cd ..
    - |
      for model in bert gpt2; do
        if [ -f "fixed_tests/test_hf_${model}.py" ]; then
          echo "Verifying ${model}..."
          python verify_mock_detection.py --file fixed_tests/test_hf_${model}.py
        fi
      done
  dependencies:
    - test-with-mocks
  artifacts:
    paths:
      - test/skills/fixed_tests/collected_results/*.json
    when: always
    expire_in: 1 week
  only:
    - schedules
    - web

# Test with torch but without transformers
test-with-torch-only:
  stage: mixed-testing
  image: python:3.10
  extends: .setup_python
  variables:
    MOCK_TORCH: "False"
    MOCK_TRANSFORMERS: "True"
    MOCK_TOKENIZERS: "True"
    MOCK_SENTENCEPIECE: "True"
  script:
    # Install torch but not transformers
    - pip install torch==2.1.1
    - pip install pillow tqdm
    - cd test/skills/fixed_tests
    # Run tests with torch but without transformers
    - |
      for model in bert gpt2; do
        if [ -f "test_hf_${model}.py" ]; then
          echo "Testing ${model} with torch but without transformers..."
          python test_hf_${model}.py
        fi
      done
  dependencies:
    - verify-mock-detection
  artifacts:
    paths:
      - test/skills/fixed_tests/collected_results/*.json
    when: always
    expire_in: 1 week

# Test with transformers but without torch
test-with-transformers-only:
  stage: mixed-testing
  image: python:3.10
  extends: .setup_python
  variables:
    MOCK_TORCH: "True" 
    MOCK_TRANSFORMERS: "False"
    MOCK_TOKENIZERS: "False"
    MOCK_SENTENCEPIECE: "False"
  script:
    # Install transformers but not torch
    - pip install transformers==4.37.0 tokenizers==0.15.0 sentencepiece==0.1.99
    - pip install pillow tqdm
    - cd test/skills/fixed_tests
    # Run tests with transformers but without torch
    - |
      for model in bert gpt2; do
        if [ -f "test_hf_${model}.py" ]; then
          echo "Testing ${model} with transformers but without torch..."
          python test_hf_${model}.py
        fi
      done
  dependencies:
    - verify-mock-detection
  artifacts:
    paths:
      - test/skills/fixed_tests/collected_results/*.json
    when: always
    expire_in: 1 week