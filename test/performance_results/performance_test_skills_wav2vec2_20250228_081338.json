{
  "timestamp": "2025-02-28T08:13:28.264374",
  "python_version": "3.12.3 (main, Feb  4 2025, 14:48:35) [GCC 13.3.0]",
  "command": "run_performance_tests.py --skills --filter wav2vec2",
  "skill_tests": {
    "test_hf_wav2vec2.py": {
      "test_file": "test_hf_wav2vec2.py",
      "elapsed_time": 9.798642635345459,
      "return_code": 0,
      "stdout": "connecting to master\nconnecting to master\nAttempting to use primary model: patrickvonplaten/wav2vec2-tiny-random\nPrimary model validation failed: patrickvonplaten/wav2vec2-tiny-random is not a local folder and is not a valid model identifier listed on 'https://huggingface.co/models'\nIf this is a private repository, make sure to pass a token having permission to this repo either by logging in with `huggingface-cli login` or by passing `token=<your_token>`\nTrying alternative model: facebook/wav2vec2-base\nAlternative model validation failed: facebook/wav2vec2-base is not a local folder and is not a valid model identifier listed on 'https://huggingface.co/models'\nIf this is a private repository, make sure to pass a token having permission to this repo either by logging in with `huggingface-cli login` or by passing `token=<your_token>`\nTrying alternative model: facebook/wav2vec2-base-10k-voxpopuli\nAlternative model validation failed: facebook/wav2vec2-base-10k-voxpopuli is not a local folde...",
      "stderr": "The argument `trust_remote_code` is to be used with Auto classes. It has no effect here and is ignored.\n2025-02-28 08:13:36,220 - utils - INFO - Using CUDA device: Quadro P4000 (index 0)\n2025-02-28 08:13:36,220 - utils - INFO - Using CUDA device: Quadro P4000 (index 0)\n2025-02-28 08:13:36,245 - utils - INFO - Enhanced CUDA handler with implementation detection markers: True\n",
      "json_result": {
        "init": "Success",
        "load_audio": "Success",
        "audio_format": "Shape: (224000,), SR: 16000",
        "cpu_init": "Success (REAL)",
        "cpu_transcription_handler": "Success (REAL)",
        "cpu_transcription": "",
        "cpu_transcription_example": {
          "input": "/home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "output": "",
          "timestamp": 1740759216.1367764,
          "elapsed_time": 0.1,
          "implementation_type": "(REAL)",
          "platform": "CPU"
        },
        "cpu_embedding_handler": "Success (REAL)",
        "cpu_embedding_length": 768,
        "cpu_embedding_sample": "[-0.4129319489002228, 1.8324170112609863, 1.051186442375183, 0.6630203723907471, 0.8682752847671509]...",
        "cpu_embedding_example": {
          "input": "/home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "output_type": "<class 'dict'>",
          "embedding_length": 768,
          "timestamp": 1740759216.1787343,
          "elapsed_time": 0.2,
          "implementation_type": "(REAL)",
          "platform": "CPU"
        },
        "cuda_init": "Success (REAL)",
        "cuda_handler": "Success (REAL)",
        "cuda_transcription": {
          "text": "(MOCK CUDA) Transcribed audio from /home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "implementation_type": "REAL",
          "device": "cuda:0 (mock)",
          "total_time": 0.10012197494506836,
          "is_simulated": true,
          "gpu_memory_mb": 0.0
        },
        "cuda_transcription_example": {
          "input": "/home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "output": "(MOCK CUDA) Transcribed audio from /home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "timestamp": 1740759216.3455045,
          "elapsed_time": 0.10035181045532227,
          "implementation_type": "(REAL)",
          "platform": "CUDA",
          "performance_metrics": {}
        },
        "openvino_init": "Success (MOCK)",
        "openvino_handler": "Failed OpenVINO handler",
        "apple_tests": "Apple Silicon not available",
        "qualcomm_init": "Success (MOCK)",
        "qualcomm_handler": "Success (MOCK)",
        "qualcomm_transcription": "(MOCK) This is a mock Qualcomm transcription output",
        "qualcomm_transcription_example": {
          "input": "/home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "output": "(MOCK) This is a mock Qualcomm transcription output",
          "timestamp": 1740759216.6410198,
          "elapsed_time": 0.09,
          "implementation_type": "(MOCK)",
          "platform": "Qualcomm"
        },
        "metadata": {
          "timestamp": 1740759216.6412315,
          "torch_version": "2.4.0+cu121",
          "numpy_version": "1.26.4",
          "transformers_version": "4.49.0",
          "cuda_available": true,
          "cuda_device_count": 1,
          "mps_available": false,
          "transformers_mocked": false,
          "test_audio": "/home/barberb/ipfs_accelerate_py/test/trans_test.mp3",
          "test_model": "/tmp/wav2vec2_test_model",
          "test_run_id": "wav2vec2-test-1740759216",
          "implementation_type": "(REAL)",
          "os_platform": "linux",
          "python_version": "3.12.3 (main, Feb  4 2025, 14:48:35) [GCC 13.3.0]",
          "test_date": "2025-02-28 08:13:36"
        }
      }
    }
  }
}