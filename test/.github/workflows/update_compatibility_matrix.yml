name: Update Compatibility Matrix

on:
  schedule:
    # Run weekly on Sunday at midnight UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:
    # Allow manual triggering
    inputs:
      all_models:
        description: 'Include all models (not just key models)'
        required: false
        default: 'false'
        type: boolean
      output_formats:
        description: 'Output formats (comma-separated: markdown,html,json)'
        required: false
        default: 'all'
        type: string

jobs:
  update-matrix:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install duckdb pandas jinja2
          
      - name: Generate compatibility matrix
        run: |
          # Set parameters based on workflow inputs
          ALL_MODELS_FLAG=""
          if [[ "${{ github.event.inputs.all_models }}" == "true" ]]; then
            ALL_MODELS_FLAG="--all-models"
          fi
          
          FORMAT_FLAG="--format all"
          if [[ -n "${{ github.event.inputs.output_formats }}" && "${{ github.event.inputs.output_formats }}" != "all" ]]; then
            FORMAT_FLAG="--format ${{ github.event.inputs.output_formats }}"
          fi
          
          # Create output directory
          mkdir -p docs
          
          # Generate the compatibility matrix
          python test/generate_enhanced_compatibility_matrix.py \
            --db-path ./benchmark_db.duckdb \
            --output-dir ./docs \
            $FORMAT_FLAG \
            $ALL_MODELS_FLAG \
            --performance \
            --recommendations
      
      - name: Calculate diff
        id: diff
        run: |
          git diff --name-only docs/ | grep -E "\.(md|html|json)$" > changed_files.txt
          if [ -s changed_files.txt ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changed files:"
            cat changed_files.txt
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in compatibility matrix"
          fi
      
      - name: Create Pull Request
        if: steps.diff.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "chore: Update compatibility matrix [Automated]"
          title: "ðŸ”„ Update Compatibility Matrix"
          body: |
            This PR updates the compatibility matrix with the latest model compatibility information.
            
            ## Changes
            - Updated Markdown documentation
            - Updated HTML interactive matrix
            - Updated JSON data
            
            Changes are generated automatically based on the latest benchmark database data.
            
            Generated by the [Update Compatibility Matrix](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) workflow.
          branch: update-compatibility-matrix
          delete-branch: true
          labels: "documentation, automated"
          
      - name: Upload matrix as artifact
        uses: actions/upload-artifact@v3
        with:
          name: compatibility-matrix
          path: docs/
          retention-days: 30