{
  "models": [
    "prajjwal1/bert-tiny",
    "google/t5-efficient-tiny"
  ],
  "hardware": "cpu",
  "batch_sizes": "1",
  "timestamp": "2025-03-06T17:47:51.212422",
  "results": {
    "google/t5-efficient-tiny": {
      "model": "google/t5-efficient-tiny",
      "hardware": "cpu",
      "batch_sizes": "1",
      "command": "python run_direct_benchmark.py --model google/t5-efficient-tiny --hardware cpu --batch-sizes 1 --output-dir benchmark_results",
      "timestamp": "2025-03-06T17:47:51.219864",
      "success": true,
      "stdout": "\nBenchmark Summary:\nModel: google/t5-efficient-tiny\nHardware: cpu\n\nResults by Batch Size:\nBatch 1: Latency 24.80ms, Throughput 40.33 items/s, Memory 535.57MB\n",
      "stderr": "2025-03-06 17:47:54,433 - __main__ - INFO - Running direct benchmarks for google/t5-efficient-tiny on cpu\n2025-03-06 17:47:55,609 - __main__ - INFO - Loading model: google/t5-efficient-tiny\nYou are using the default legacy behaviour of the <class 'transformers.models.t5.tokenization_t5.T5Tokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565\nAsking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.\nPassing a tuple of `past_key_values` is deprecated and will be removed in Transformers v4.48.0. You should pass an instance of `EncoderDecoderCache` instead, e.g. `past_key_values=EncoderDecoderCache.from_legacy_cache(past_key_values)`.\n2025-03-06 17:48:00,043 - __main__ - INFO - Benchmarks completed successfully\n",
      "benchmark_data": {
        "model": "google/t5-efficient-tiny",
        "hardware": "cpu",
        "success": true,
        "batch_results": {
          "1": {
            "success": true,
            "batch_size": 1,
            "avg_latency_ms": 24.79729652404785,
            "throughput_items_per_second": 40.326976734347745,
            "memory_mb": 535.5703125,
            "latencies_ms": [
              45.23944854736328,
              20.348072052001953,
              17.99631118774414,
              20.275354385375977,
              20.127296447753906
            ],
            "device": "cpu",
            "timestamp": "2025-03-06T17:48:00.023431"
          }
        },
        "timestamp": "2025-03-06T17:47:59.437712"
      },
      "output_file": "benchmark_results/direct_benchmark_google_t5-efficient-tiny_cpu_20250306_174800.json",
      "summary": {
        "1": {
          "latency_ms": 24.79729652404785,
          "throughput": 40.326976734347745,
          "memory_mb": 535.5703125
        }
      }
    },
    "prajjwal1/bert-tiny": {
      "model": "prajjwal1/bert-tiny",
      "hardware": "cpu",
      "batch_sizes": "1",
      "command": "python run_direct_benchmark.py --model prajjwal1/bert-tiny --hardware cpu --batch-sizes 1 --output-dir benchmark_results",
      "timestamp": "2025-03-06T17:47:51.219891",
      "success": true,
      "stdout": "\nBenchmark Summary:\nModel: prajjwal1/bert-tiny\nHardware: cpu\n\nResults by Batch Size:\nBatch 1: Latency 52.59ms, Throughput 19.01 items/s, Memory 508.17MB\n",
      "stderr": "2025-03-06 17:47:54,266 - __main__ - INFO - Running direct benchmarks for prajjwal1/bert-tiny on cpu\n2025-03-06 17:47:55,551 - __main__ - INFO - Loading model: prajjwal1/bert-tiny\nAsking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.\n2025-03-06 17:47:59,712 - __main__ - INFO - Benchmarks completed successfully\n",
      "benchmark_data": {
        "model": "prajjwal1/bert-tiny",
        "hardware": "cpu",
        "success": true,
        "batch_results": {
          "1": {
            "success": true,
            "batch_size": 1,
            "avg_latency_ms": 52.59137153625488,
            "throughput_items_per_second": 19.014525972395123,
            "memory_mb": 508.16796875,
            "latencies_ms": [
              37.537574768066406,
              184.07940864562988,
              1.5406608581542969,
              26.749134063720703,
              13.050079345703125
            ],
            "device": "cpu",
            "timestamp": "2025-03-06T17:47:59.698387"
          }
        },
        "timestamp": "2025-03-06T17:47:59.196649"
      },
      "output_file": "benchmark_results/direct_benchmark_prajjwal1_bert-tiny_cpu_20250306_174759.json",
      "summary": {
        "1": {
          "latency_ms": 52.59137153625488,
          "throughput": 19.014525972395123,
          "memory_mb": 508.16796875
        }
      }
    }
  }
}