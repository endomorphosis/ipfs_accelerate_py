{
  "timestamp": "20250302_202226",
  "system_info": {
    "platform": "Linux-6.8.0-11-generic-x86_64-with-glibc2.39",
    "python_version": "3.12.3",
    "processor": "x86_64",
    "hostname": "barberb-Hyper-V-UEFI-Release-v4-1",
    "os": "Linux",
    "os_release": "6.8.0-11-generic",
    "os_version": "#11-Ubuntu SMP PREEMPT_DYNAMIC Wed Feb 14 00:29:05 UTC 2024",
    "architecture": "x86_64",
    "timestamp": "2025-03-02T20:22:26.740048",
    "cpu_count_physical": 4,
    "cpu_count_logical": 8,
    "total_memory_gb": 62.21421432495117,
    "available_memory_gb": 39.880645751953125,
    "memory_percent_used": 35.9,
    "cuda_available": true,
    "cuda_version": "12.4",
    "cuda_device_count": 1,
    "cuda_devices": [
      {
        "name": "Quadro P4000",
        "total_memory_gb": 7.923583984375,
        "compute_capability": "6.1",
        "multi_processor_count": 14
      }
    ],
    "mps_available": false,
    "openvino_available": true,
    "openvino_version": "2025.0.0-17942-1f68be9f594-releases/2025/0"
  },
  "hardware_info": {
    "cpu": true,
    "cuda": true,
    "mps": false,
    "rocm": false,
    "openvino": true
  },
  "benchmarks": {
    "text_generation": {
      "gpt2": {
        "cpu": {
          "status": "completed",
          "model_name": "gpt2",
          "model_class": "GPT2LMHeadModel",
          "family": "text_generation",
          "hardware": "cpu",
          "benchmark_results": {
            "batch_1_seq_32": {
              "status": "failed",
              "error": "Input creation failed: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`."
            },
            "batch_1_seq_128": {
              "status": "failed",
              "error": "Input creation failed: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`."
            },
            "batch_1_seq_512": {
              "status": "failed",
              "error": "Input creation failed: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`."
            }
          },
          "timestamp": "2025-03-02T20:22:26.740755",
          "model_load_time": 12.167279958724976,
          "performance_summary": {
            "latency": {},
            "throughput": {},
            "memory": {}
          }
        },
        "openvino": {
          "status": "completed",
          "model_name": "gpt2",
          "model_class": "GPT2LMHeadModel",
          "family": "text_generation",
          "hardware": "openvino",
          "benchmark_results": {
            "batch_1_seq_32": {
              "status": "failed",
              "error": "Input creation failed: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`."
            },
            "batch_1_seq_128": {
              "status": "failed",
              "error": "Input creation failed: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`."
            },
            "batch_1_seq_512": {
              "status": "failed",
              "error": "Input creation failed: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`."
            }
          },
          "timestamp": "2025-03-02T20:22:42.271385",
          "model_load_time": 8.7738037109375e-05,
          "performance_summary": {
            "latency": {},
            "throughput": {},
            "memory": {}
          }
        }
      },
      "t5-small": {
        "cpu": {
          "status": "completed",
          "model_name": "t5-small",
          "model_class": "T5ForConditionalGeneration",
          "family": "text_generation",
          "hardware": "cpu",
          "benchmark_results": {
            "batch_1_seq_32": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_128": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_512": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            }
          },
          "timestamp": "2025-03-02T20:22:42.542596",
          "model_load_time": 20.904698848724365,
          "performance_summary": {
            "latency": {},
            "throughput": {},
            "memory": {}
          }
        },
        "openvino": {
          "status": "completed",
          "model_name": "t5-small",
          "model_class": "T5ForConditionalGeneration",
          "family": "text_generation",
          "hardware": "openvino",
          "benchmark_results": {
            "batch_1_seq_32": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_128": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_512": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            }
          },
          "timestamp": "2025-03-02T20:23:04.672698",
          "model_load_time": 5.841255187988281e-05,
          "performance_summary": {
            "latency": {},
            "throughput": {},
            "memory": {}
          }
        }
      },
      "google/flan-t5-small": {
        "cpu": {
          "status": "completed",
          "model_name": "google/flan-t5-small",
          "model_class": "T5ForConditionalGeneration",
          "family": "text_generation",
          "hardware": "cpu",
          "benchmark_results": {
            "batch_1_seq_32": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_128": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_512": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            }
          },
          "timestamp": "2025-03-02T20:23:04.904591",
          "model_load_time": 15.248565673828125,
          "performance_summary": {
            "latency": {},
            "throughput": {},
            "memory": {}
          }
        },
        "openvino": {
          "status": "completed",
          "model_name": "google/flan-t5-small",
          "model_class": "T5ForConditionalGeneration",
          "family": "text_generation",
          "hardware": "openvino",
          "benchmark_results": {
            "batch_1_seq_32": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_128": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            },
            "batch_1_seq_512": {
              "status": "failed",
              "error": "Warmup failed: 'dict' object has no attribute 'input_ids'"
            }
          },
          "timestamp": "2025-03-02T20:23:22.585456",
          "model_load_time": 5.435943603515625e-05,
          "performance_summary": {
            "latency": {},
            "throughput": {},
            "memory": {}
          }
        }
      }
    }
  },
  "hardware_details": {
    "cpu": true,
    "cuda": true,
    "cuda_device_count": 1,
    "cuda_devices": [
      {
        "name": "Quadro P4000",
        "total_memory": 7.923583984375,
        "compute_capability": "6.1",
        "multi_processor_count": 14
      }
    ],
    "cuda_current_device": 0,
    "cuda_arch_list": [
      "sm_50",
      "sm_60",
      "sm_70",
      "sm_75",
      "sm_80",
      "sm_86",
      "sm_90"
    ],
    "cuda_memory_allocated": 4.76837158203125e-07,
    "cuda_memory_reserved": 0.001953125,
    "mps": false,
    "mps_is_built": false,
    "mps_error": "MPS not available in current PyTorch installation",
    "xla_available": false,
    "rocm": false,
    "rocm_error": "CUDA available, but no ROCm/AMD GPU detected",
    "openvino": true,
    "openvino_version": "2025.0.0-17942-1f68be9f594-releases/2025/0",
    "openvino_devices": [
      "CPU"
    ],
    "openvino_device_info": {
      "CPU": "Intel(R) Xeon(R) CPU E3-1535M v6 @ 3.10GHz"
    },
    "openvino_gpu_plugin": false,
    "openvino_compilation_test_error": "cannot import name 'opset' from 'openvino.runtime' (/home/barberb/ipfs_accelerate_py/.venv/lib/python3.12/site-packages/openvino/runtime/__init__.py)",
    "webnn": false,
    "webnn_error": "Exception detecting WebNN: cannot access local variable 'os' where it is not associated with a value",
    "webgpu": false,
    "webgpu_error": "Exception detecting WebGPU: cannot access local variable 'os' where it is not associated with a value",
    "tpu_available": false,
    "qualcomm_ai": false,
    "system": {
      "platform": "Linux",
      "platform_release": "6.8.0-11-generic",
      "platform_version": "#11-Ubuntu SMP PREEMPT_DYNAMIC Wed Feb 14 00:29:05 UTC 2024",
      "architecture": "x86_64",
      "processor": "x86_64",
      "cpu_count": 8,
      "python_version": "3.12.3",
      "python_implementation": "CPython",
      "total_memory": 62.21421432495117,
      "available_memory": 39.880645751953125,
      "memory_percent_used": 35.9
    }
  }
}